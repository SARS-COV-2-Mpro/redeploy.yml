0
name: After Deploy -> Trigger Ideas Pusher (10m later)

on:
  workflow_run:
    workflows: ["Deploy to Cloudflare"]   # must match Action A's name exactly
    types: [completed]

permissions:
  contents: read

concurrency:
  group: trigger-ideas-${{ github.event.workflow_run.id }}
  cancel-in-progress: true

jobs:
  trigger-b:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.run_attempt == 1
    runs-on: ubuntu-latest

    steps:
      - name: Wait until (A finished) + 10 minutes
        uses: actions/github-script@v7
        with:
          script: |
            const finished = new Date("${{ github.event.workflow_run.updated_at }}");
            const target = new Date(finished.getTime() + 10*60*1000);
            const wait = target - new Date();
            if (wait > 0) {
              core.info(`Sleeping ${(wait/1000|0)} s until ${target.toISOString()}`);
              await new Promise(r => setTimeout(r, wait));
            } else {
              core.info('No wait needed.');
            }

      - name: Dispatch to repo B
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.REPO_B_TOKEN }}
          script: |
            await github.request('POST /repos/{owner}/{repo}/dispatches', {
              owner: 'SARS-COV-2-Mpro',   // your GitHub username/org
              repo: 'my-bot-ideas',       // destination repository (Repo B)
              event_type: 'run_B',
              client_payload: {
                a_repo: context.payload.repository.full_name,
                a_run_id: context.payload.workflow_run.id,
                a_run_number: context.payload.workflow_run.run_number,
                a_html_url: context.payload.workflow_run.html_url,
                finished_at: context.payload.workflow_run.updated_at
              }
            });
